# Generated by Django 5.0.6 on 2024-07-06 21:15

import base.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('aluno_id', models.AutoField(primary_key=True, serialize=False)),
                ('aluno_inep', models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[base.validators.validate_aluno_inep, base.validators.validate_digits], verbose_name='Inep')),
                ('aluno_cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[base.validators.validate_cpf], verbose_name='Cpf')),
                ('aluno_rg', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='RG')),
                ('aluno_nis', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[base.validators.validate_nis, base.validators.validate_digits], verbose_name='NIS')),
                ('aluno_certidao_nova', models.CharField(blank=True, max_length=40, null=True, unique=True, validators=[base.validators.validate_certidao_nascimento], verbose_name='Certidão de nascimento - nova')),
                ('aluno_justificativa_documentos', models.CharField(blank=True, choices=[('1', 'O aluno(a) não possui os documentos solicitados'), ('2', 'A escola não recebeu os documentos solicitados')], max_length=1, verbose_name='Justificativa da falta de documentos')),
                ('aluno_nome', models.CharField(max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Nome completo')),
                ('aluno_data_nascimento', models.CharField(max_length=10, validators=[base.validators.validate_data], verbose_name='Data de nascimento')),
                ('aluno_sexo', models.CharField(choices=[('1', 'Masculino'), ('2', 'Feminino')], max_length=1, verbose_name='Sexo')),
                ('aluno_cor', models.CharField(choices=[('0', 'Não declarada'), ('1', 'Branca'), ('2', 'Preta'), ('3', 'Parda'), ('4', 'Amarela'), ('5', 'Indígena')], default='0', max_length=1, verbose_name='Cor / Raça')),
                ('aluno_nacionalidade', models.CharField(choices=[('1', 'Brasileira'), ('2', 'Brasileira - Naturalizado(a)'), ('3', 'Estrangeira')], default='1', max_length=1, verbose_name='Nacionalidade')),
                ('aluno_estado_nascimento', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('aluno_municipio_nascimento', models.CharField(blank=True, max_length=100, verbose_name='Municipio nascimento')),
                ('aluno_logradouro_residencia', models.CharField(max_length=100, verbose_name='Logradoro')),
                ('aluno_numero_residencia', models.CharField(max_length=10, verbose_name='Número')),
                ('aluno_complemento_residencia', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('aluno_zona_residencia', models.CharField(choices=[('1', 'Urbana'), ('2', 'Rural')], default='1', max_length=1, verbose_name='Localização')),
                ('aluno_localizacao_residencia', models.CharField(choices=[('1', 'Área de assentamento'), ('2', 'Terra indígena'), ('3', 'Área quilombola'), ('7', 'Não está em uma localização diferenciada')], default='7', max_length=1, verbose_name='Localização diferenciada')),
                ('aluno_bairro_residencia', models.CharField(blank=True, max_length=50, verbose_name='Bairro')),
                ('aluno_cep_residencia', models.CharField(max_length=9, validators=[base.validators.validate_cep], verbose_name='CEP')),
                ('aluno_estado_residencia', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], default='PA', max_length=2, verbose_name='Estado')),
                ('aluno_municipio_residencia', models.CharField(max_length=100, verbose_name='Municipio residência')),
                ('aluno_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Aluno - DDD Telefone')),
                ('aluno_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='aluno - Telefone')),
                ('aluno_email', models.EmailField(blank=True, max_length=250, null=True, unique=True, verbose_name='Email')),
                ('aluno_filiacao', models.CharField(choices=[('0', 'Não declarado/Ignorado'), ('1', 'Filiação 1 e/ou Filiação 2')], max_length=1, verbose_name='Filiação')),
                ('aluno_filiacao1_nome', models.CharField(blank=True, max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Filiação 1 - Nome')),
                ('aluno_filiacao1_cpf', models.CharField(blank=True, max_length=14, validators=[base.validators.validate_cpf], verbose_name='Filiação 1 - Cpf')),
                ('aluno_filiacao1_rg', models.CharField(blank=True, max_length=20, verbose_name='Filiação 1 - RG')),
                ('aluno_filiacao1_ddd1', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Filiação 1 - DDD Telefone 1')),
                ('aluno_filiacao1_telefone1', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Filiação 1 - Telefone 1')),
                ('aluno_filiacao1_ddd2', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Filiação 1 - DDD Telefone 2')),
                ('aluno_filiacao1_telefone2', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Filiação 1 - Telefone 2')),
                ('aluno_filiacao1_email', models.EmailField(blank=True, max_length=250, verbose_name='Filiação 1 - Email')),
                ('aluno_filiacao1_respon_didatico', models.CharField(blank=True, max_length=1, verbose_name='Filiação 1 - Responsável didático')),
                ('aluno_filiacao1_respon_financeiro', models.CharField(blank=True, max_length=1, verbose_name='Filiação 1 - Responsável financeiro')),
                ('aluno_filiacao1_respon_legal', models.CharField(blank=True, max_length=1, verbose_name='Filiação 1 - Responsável legal')),
                ('aluno_filiacao1_doc_guarda', models.CharField(blank=True, max_length=1, verbose_name='Filiação 1 - Documento da guarda')),
                ('aluno_filiacao1_parentesco', models.CharField(blank=True, max_length=50, verbose_name='Filiação 1 - Parentesco')),
                ('aluno_filiacao2_nome', models.CharField(blank=True, max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Filiação 2 - Nome')),
                ('aluno_filiacao2_cpf', models.CharField(blank=True, max_length=14, validators=[base.validators.validate_cpf], verbose_name='Filiação 2 - Cpf')),
                ('aluno_filiacao2_rg', models.CharField(blank=True, max_length=20, verbose_name='Filiação 2 - RG')),
                ('aluno_filiacao2_ddd1', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Filiação 2 - DDD Telefone 1')),
                ('aluno_filiacao2_telefone1', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Filiação 2 - Telefone 1')),
                ('aluno_filiacao2_ddd2', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Filiação 2 - DDD Telefone 2')),
                ('aluno_filiacao2_telefone2', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Filiação 2 - Telefone 2')),
                ('aluno_filiacao2_email', models.EmailField(blank=True, max_length=250, verbose_name='Filiação 2 - Email')),
                ('aluno_filiacao2_respon_didatico', models.CharField(blank=True, max_length=1, verbose_name='Filiação 2 - Responsável didático')),
                ('aluno_filiacao2_respon_financeiro', models.CharField(blank=True, max_length=1, verbose_name='Filiação 2 - Responsável financeiro')),
                ('aluno_filiacao2_respon_legal', models.CharField(blank=True, max_length=1, verbose_name='Filiação 2 - Responsável legal')),
                ('aluno_filiacao2_doc_guarda', models.CharField(blank=True, max_length=1, verbose_name='Filiação 2 - Documento da guarda')),
                ('aluno_filiacao2_parentesco', models.CharField(blank=True, max_length=50, verbose_name='Filiação 2 - Parentesco')),
                ('aluno_deficiencia', models.CharField(choices=[('0', 'Não'), ('1', 'Sim')], max_length=1, verbose_name='Tem Deficiência Física')),
                ('aluno_cegueira', models.CharField(blank=True, max_length=1, verbose_name='Cegueira')),
                ('aluno_baixa_visao', models.CharField(blank=True, max_length=1, verbose_name='Baixa visão')),
                ('aluno_surdez', models.CharField(blank=True, max_length=1, verbose_name='Surdez')),
                ('aluno_deficiencia_auditiva', models.CharField(blank=True, max_length=1, verbose_name='Deficiência auditiva')),
                ('aluno_surdocegueira', models.CharField(blank=True, max_length=1, verbose_name='Surdocegueira')),
                ('aluno_deficiencia_fisica', models.CharField(blank=True, max_length=1, verbose_name='Deficiência física')),
                ('aluno_deficiencia_intelectual', models.CharField(blank=True, max_length=1, verbose_name='Deficiência intelectual')),
                ('aluno_deficiencia_multipla', models.CharField(blank=True, max_length=1, verbose_name='Deficiência múltipla')),
                ('aluno_autismo', models.CharField(blank=True, max_length=1, verbose_name='Autismo')),
                ('aluno_altas_habilidades', models.CharField(blank=True, max_length=1, verbose_name='Altas habilidades')),
                ('aluno_necessidades_especiais', models.CharField(blank=True, max_length=1, verbose_name='Nenhuma necessidade especial')),
                ('aluno_auxilio_ledor', models.CharField(blank=True, max_length=1, verbose_name='Auxílio ledor')),
                ('aluno_auxilio_transcricao', models.CharField(blank=True, max_length=1, verbose_name='Auxílio transcrição')),
                ('aluno_guia_interprete', models.CharField(blank=True, max_length=1, verbose_name='Guia Intérprete')),
                ('aluno_tradutor_libras', models.CharField(blank=True, max_length=1, verbose_name='Tradutor libras')),
                ('aluno_leitura_labial', models.CharField(blank=True, max_length=1, verbose_name='Leitura labial')),
                ('aluno_prova_ampliada18', models.CharField(blank=True, max_length=1, verbose_name='Prova ampliada (fonte 18)')),
                ('aluno_prova_superampliada24', models.CharField(blank=True, max_length=1, verbose_name='Prova ampliada (fonte 24)')),
                ('aluno_cd_audio', models.CharField(blank=True, max_length=1, verbose_name='Cd áudio')),
                ('aluno_prova_portuguesa', models.CharField(blank=True, max_length=1, verbose_name='Prova de língua portuguesa')),
                ('aluno_prova_video', models.CharField(blank=True, max_length=1, verbose_name='Prova em vídeo em libras')),
                ('aluno_prova_braille', models.CharField(blank=True, max_length=1, verbose_name='Material e Prova em Braille')),
                ('aluno_saida_escola', models.CharField(blank=True, choices=[('1', 'Acompanhado'), ('2', 'Sozinho'), ('3', 'Transporte escolar (acompanhado)')], default='1', max_length=1, verbose_name='Saída da escola')),
                ('aluno_ensino_outro_lugar', models.CharField(blank=True, choices=[('1', 'Não'), ('2', 'Hospital'), ('3', 'Domicílio'), ('4', 'Instalações exteriores')], default='1', max_length=1, verbose_name='Ensino em outro lugar')),
                ('aluno_transporte_publico', models.CharField(blank=True, max_length=1, verbose_name='Transporte Público')),
                ('aluno_transporte_poder', models.CharField(blank=True, choices=[('1', 'Estadual'), ('2', 'Municipal')], max_length=1, verbose_name='Poder responsavél pelo transporte público')),
                ('aluno_rodoviario_particular', models.CharField(blank=True, max_length=1, verbose_name='Particular')),
                ('aluno_rodoviario_bicicleta', models.CharField(blank=True, max_length=1, verbose_name='Bicicleta')),
                ('aluno_rodoviario_animal', models.CharField(blank=True, max_length=1, verbose_name='Animal')),
                ('aluno_rodoviario_microonibus', models.CharField(blank=True, max_length=1, verbose_name='Microonibus')),
                ('aluno_rodoviario_onibus', models.CharField(blank=True, max_length=1, verbose_name='Onibus')),
                ('aluno_rodoviario_van', models.CharField(blank=True, max_length=1, verbose_name='Van')),
                ('aluno_rodoviario_outro', models.CharField(blank=True, max_length=1, verbose_name='Outro')),
                ('aluno_aquaviario_particular', models.CharField(blank=True, max_length=1, verbose_name='Particular')),
                ('aluno_aquaviario_5', models.CharField(blank=True, max_length=1, verbose_name='5 lugares')),
                ('aluno_aquaviario_15', models.CharField(blank=True, max_length=1, verbose_name='15 lugares')),
                ('aluno_aquaviario_35', models.CharField(blank=True, max_length=1, verbose_name='35 lugares')),
                ('aluno_aquaviario_mais35', models.CharField(blank=True, max_length=1, verbose_name='Mais de 35 lugares')),
                ('aluno_urgencia1_nome', models.CharField(blank=True, max_length=100, verbose_name='Urgência 1 - Nome')),
                ('aluno_urgencia1_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Urgência 1 - DDD')),
                ('aluno_urgencia1_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Urgência 1 - Telefone')),
                ('aluno_urgencia1_parentesco', models.CharField(blank=True, max_length=50, verbose_name='Urgência 1 - Parentesco')),
                ('aluno_urgencia2_nome', models.CharField(blank=True, max_length=100, verbose_name='Urgência 2 - Nome')),
                ('aluno_urgencia2_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Urgência 2 - DDD')),
                ('aluno_urgencia2_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Urgência 2 - Telefone')),
                ('aluno_urgencia2_parentesco', models.CharField(blank=True, max_length=50, verbose_name='Urgência 2 - Parentesco')),
                ('aluno_urgencia_procedimentos', models.TextField(blank=True, verbose_name='Procedimentos em caso de urgência')),
                ('aluno_alergia', models.CharField(blank=True, max_length=1, verbose_name='alergia')),
                ('aluno_alergia_tipo', models.TextField(blank=True, max_length=1000, verbose_name='Tipo de alergia(s) e cuidados')),
                ('aluno_apto_edfisica', models.CharField(blank=True, max_length=1, verbose_name='alergia')),
                ('aluno_apto_edfisica_justificativa', models.CharField(blank=True, max_length=100, verbose_name='Justificativa para a inadptidão.')),
                ('aluno_medicacao', models.TextField(blank=True, max_length=1000, verbose_name='Instruções para medicação')),
                ('aluno_cuidados_diferenciados', models.TextField(blank=True, max_length=1000, verbose_name='Cuidados diferenciados')),
                ('aluno_plano_saude', models.CharField(blank=True, max_length=1, verbose_name='Plano de Saúde')),
                ('aluno_plano_saude_nome', models.CharField(blank=True, max_length=50, verbose_name='Nome do Plano de Saúde')),
                ('aluno_plano_saude_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('aluno_plano_saude_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Telefone')),
                ('aluno_plano_saude_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('aluno_convenio', models.CharField(blank=True, max_length=1, verbose_name='Convênio')),
                ('aluno_convenio_nome', models.CharField(blank=True, max_length=50, verbose_name='Nome do convênio')),
                ('aluno_convenio_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('aluno_convenio_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Telefone')),
                ('aluno_convenio_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('aluno_programa_social', models.CharField(blank=True, max_length=1, verbose_name='Convênio')),
                ('aluno_programa_social_nome', models.CharField(blank=True, max_length=50, verbose_name='Nome do convênio')),
                ('aluno_programa_social_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('aluno_programa_social_telefone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Telefone')),
                ('aluno_programa_social_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('aluno_bolsa', models.CharField(blank=True, max_length=1, verbose_name='Bolsa')),
                ('aluno_bolsa_tipo', models.CharField(blank=True, max_length=100, verbose_name='Bolsa')),
                ('aluno_bolsa_motivo', models.CharField(blank=True, max_length=100, verbose_name='Bolsa')),
                ('aluno_observacoes', models.TextField(blank=True, max_length=1000, verbose_name='Observações')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data da Criação')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Data da alteração')),
                ('aluno_pais_nascimento', models.ForeignKey(default='Brasil', on_delete=django.db.models.deletion.DO_NOTHING, related_name='alunopaisnascimento', to='base.pais', verbose_name='País de nascimento')),
                ('aluno_pais_residencia', models.ForeignKey(default='Brasil', on_delete=django.db.models.deletion.DO_NOTHING, related_name='alunopaisresidencia', to='base.pais', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
                'ordering': ['aluno_nome'],
            },
        ),
    ]
